#!/usr/bin/env bash

set -e
. /etc/borg/config
set +e

# Skriptvorlage BorgBackup
# https://wiki.ubuntuusers.de/BorgBackup/
# https://borgbackup.readthedocs.io/en/stable/

###################################################################################################

fullpath="$targetpath"/"$repository"

mount_name()
{
  mount="$1"

  if [ "$mount" = "/" ]
  then
    echo "root"
  else
    basename "$mount"
  fi
}

echo "Borg is now assimilating files!" | pts-wall
sleep 5

run-parts --report /etc/borg/pre.d

for mountpoint in "${mountpoints[@]}"
do
  # backup data
  SECONDS=0

  # Silent cronjob
  #echo "Starting backup $(date) of $mountpoint."

  name="$(mount_name "$mountpoint")"
  set +e
  LOG="$(borg create --compression "$compression" --exclude-caches --one-file-system -v --stats --progress \
      --exclude-from /etc/borg/exclude "$fullpath::{hostname}-$name-{now:%Y-%m-%d-%H%M%S}" "$mountpoint" 2>&1)"
  EXIT_CODE="$?"
  set -e

  if ! [ "$EXIT_CODE" = "0" ] && ! [ "$EXIT_CODE" = "1" ]
  then
    echo "Error during backup $(date) of $mountpoint. Duration: $SECONDS seconds"
    echo "$LOG" >&2
    echo "Emergency: Borg failed!" | pts-wall
    continue
  fi
  # Silent cronjob
  #echo "End of backup $(date) of $mountpoint. Duration: $SECONDS seconds"
done

# prune archives
for mountpoint in "${mountpoints[@]}"
do
  name="$(mount_name "$mountpoint")"
  set +e
  LOG="$(borg prune -v --list "$fullpath" -P '{hostname}-'"$name-" $pruning 2>&1)"
  EXIT_CODE="$?"
  set -e

  if ! [ "$EXIT_CODE" = "0" ]
  then
    echo "Failed to prune." >&2
    echo "$LOG" >&2
    echo "Emergency: Borg failed!" | pts-wall
  fi
done

run-parts --report /etc/borg/post.d

echo "Borg has finished assimilating files!" | pts-wall
